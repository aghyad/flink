<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-examples</artifactId>
		<version>1.13-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>flink-examples-streaming_${scala.binary.version}</artifactId>
	<name>Flink : Examples : Streaming</name>

	<packaging>jar</packaging>

	<!-- Allow users to pass custom jcuda versions -->
	<properties>
		<jcuda.version>10.0.0</jcuda.version>
	</properties>

	<dependencies>

		<!-- core dependencies -->

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-clients_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-twitter_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-kafka_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-shaded-jackson</artifactId>
		</dependency>

		<!-- test dependencies -->

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>
            <version>${project.version}</version>
        </dependency>

		<!-- Dependencies for MatrixVectorMul. We exclude native libraries
		because it is not available in all the operating systems and architectures. Moreover,
		we also want to enable users to compile and run MatrixVectorMul in different runtime environments.-->
		<dependency>
			<groupId>org.jcuda</groupId>
			<artifactId>jcuda</artifactId>
			<version>${jcuda.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jcuda</groupId>
					<artifactId>jcuda-natives</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jcuda</groupId>
			<artifactId>jcublas</artifactId>
			<version>${jcuda.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jcuda</groupId>
					<artifactId>jcublas-natives</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- self-contained jars for each example -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$-->
				<executions>
					<!-- Default Execution -->
					<execution>
						<id>default</id>
						<phase>package</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
					
					<!-- SlideWindowSimulation1 -->
					<execution>
						<id>SlideWindowSimulation1</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SlideWindowSimulation1</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.pvl.simulation1.SlideWindowSimulation1</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/pvl/simulation1/SlideWindowSimulation1.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation1/util/DataDictionary.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation1/util/MyDataElement.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation1/util/MyProcessWindowFunction.class</include>
								<include>META-INF/LICENSE</include>
								<include>META-INF/NOTICE</include>
							</includes>
						</configuration>
					</execution>

					<!-- SlideWindowSimulation2 -->
					<execution>
						<id>SlideWindowSimulation2</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SlideWindowSimulation2</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.pvl.simulation2.SlideWindowSimulation2</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/pvl/simulation2/SlideWindowSimulation2.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation2/util/MyDataHashMap.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation2/util/DataDictionary.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation2/util/MyWindowFunction.class</include>
								<include>META-INF/LICENSE</include>
								<include>META-INF/NOTICE</include>
							</includes>
						</configuration>
					</execution>

					<!-- SlideWindowSimulation3 -->
					<execution>
						<id>SlideWindowSimulation3</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SlideWindowSimulation3</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.pvl.simulation3.SlideWindowSimulation3</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/pvl/simulation3/SlideWindowSimulation3.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation3/util/MyDataHashMap.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation3/util/DataDictionary.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation3/util/MyWindowFunction.class</include>
								<include>META-INF/LICENSE</include>
								<include>META-INF/NOTICE</include>
							</includes>
						</configuration>
					</execution>

					<!-- SlideWindowSimulation4 -->
					<execution>
						<id>SlideWindowSimulation4</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SlideWindowSimulation4</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.pvl.simulation4.SlideWindowSimulation4</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/pvl/simulation4/SlideWindowSimulation4.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation4/util/MyDataHashMap.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation4/util/DataDictionary.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation4/util/DataDictionaryLocalImpl.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation4/util/DataDictionaryCloudImpl.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation4/util/MyWindowFunction.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation4/util/JsonDataLoader.class</include>
								<include>org/json/simple/JSONArray.class</include>
								<include>org/json/simple/JSONObject.class</include>
								<include>org/json/simple/parser/JSONParser.class</include>
								<include>META-INF/LICENSE</include>
								<include>META-INF/NOTICE</include>
							</includes>
						</configuration>
					</execution>

					<!-- SlideWindowSimulation5 -->
					<execution>
						<id>SlideWindowSimulation5</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SlideWindowSimulation5</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.pvl.simulation5.SlideWindowSimulation5</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/pvl/simulation5/SlideWindowSimulation5.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation5/util/MyDataHashMap.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation5/util/DataDictionary.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation5/util/DataDictionaryLocalImpl.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation5/util/DataDictionaryCloudImpl.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation5/util/MyWindowFunction.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation5/util/DataLoader.class</include>
								<include>META-INF/LICENSE</include>
								<include>META-INF/NOTICE</include>
							</includes>
						</configuration>
					</execution>

					<!-- SlideWindowSimulation6 -->
					<execution>
						<id>SlideWindowSimulation6</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>SlideWindowSimulation6</classifier>

							<archive>
								<manifestEntries>
									<program-class>org.apache.flink.streaming.examples.pvl.simulation6.SlideWindowSimulation6</program-class>
								</manifestEntries>
							</archive>

							<includes>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/SlideWindowSimulation6.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/util/MyDataHashMap.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/util/DataDictionary.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/util/DataDictionaryLocalImpl.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/util/DataDictionaryCloudImpl.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/util/MyWindowFunction.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/util/DataLoader.class</include>
								<include>org/apache/flink/streaming/examples/pvl/simulation6/util/MyCountWithTimeoutTrigger.class</include>
								<include>META-INF/LICENSE</include>
								<include>META-INF/NOTICE</include>
							</includes>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>MatrixVectorMul</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadeTestJar>false</shadeTestJar>
							<finalName>MatrixVectorMul</finalName>
							<artifactSet>
								<includes>
									<include>org.jcuda:*</include>
								</includes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>org.apache.flink:*</artifact>
									<includes>
										<include>org/apache/flink/streaming/examples/gpu/MatrixVectorMul.class</include>
										<include>org/apache/flink/streaming/examples/gpu/MatrixVectorMul$*.class</include>
									</includes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.apache.flink.streaming.examples.gpu.MatrixVectorMul</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- Eclipse Integration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<projectnatures>
						<projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
					</projectnatures>
					<buildcommands>
						<buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
					</buildcommands>
					<classpathContainers>
						<classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<excludes>
						<exclude>org.scala-lang:scala-library</exclude>
						<exclude>org.scala-lang:scala-compiler</exclude>
					</excludes>
					<sourceIncludes>
						<sourceInclude>**/*.scala</sourceInclude>
						<sourceInclude>**/*.java</sourceInclude>
					</sourceIncludes>
				</configuration>
			</plugin>

			<!--simplify the name of example JARs for build-target/examples -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>rename</id>
						<configuration>
							<target>
								<copy file="${project.basedir}/target/flink-examples-streaming_${scala.binary.version}-${project.version}-SlideWindowSimulation1.jar" tofile="${project.basedir}/target/SlideWindowSimulation1.jar" />
								<copy file="${project.basedir}/target/flink-examples-streaming_${scala.binary.version}-${project.version}-SlideWindowSimulation2.jar" tofile="${project.basedir}/target/SlideWindowSimulation2.jar" />
								<copy file="${project.basedir}/target/flink-examples-streaming_${scala.binary.version}-${project.version}-SlideWindowSimulation3.jar" tofile="${project.basedir}/target/SlideWindowSimulation3.jar" />
								<copy file="${project.basedir}/target/flink-examples-streaming_${scala.binary.version}-${project.version}-SlideWindowSimulation4.jar" tofile="${project.basedir}/target/SlideWindowSimulation4.jar" />
								<copy file="${project.basedir}/target/flink-examples-streaming_${scala.binary.version}-${project.version}-SlideWindowSimulation5.jar" tofile="${project.basedir}/target/SlideWindowSimulation5.jar" />
								<copy file="${project.basedir}/target/flink-examples-streaming_${scala.binary.version}-${project.version}-SlideWindowSimulation6.jar" tofile="${project.basedir}/target/SlideWindowSimulation6.jar" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
